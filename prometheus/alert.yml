groups:
- name: general
  rules:
  - alert: TargetDown
    expr: 100 * (count by(job) (up == 0) / count by(job) (up)) > 10
    for: 10m
    labels:
      severity: warning
    annotations:
      summary: "Instance {{ $labels.instance }} down"
      description: "{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 10m."

- name: docker
  rules:
  - alert: ContainerKilled
    expr: time() - container_last_seen{name!=""} > 60
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: "Container killed (instance {{ $labels.instance }}) (name: {{ $labels.name }})"
      description: "A container has disappeared {{ $labels.name }} \n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - alert: ContainerCpuUsage
    expr: (sum(rate(container_cpu_usage_seconds_total{name!=""}[3m])) BY (instance, name) * 100) > 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: "Container CPU usage (instance {{ $labels.instance }}) (name: {{ $labels.name }})"
      description: "Container CPU usage is above 80% {{ $labels.name }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - alert: ContainerMemoryUsage
    expr: (sum(container_memory_working_set_bytes{name!=""}) BY (instance, name) / sum(container_spec_memory_limit_bytes > 0) BY (instance, name) * 100) > 80
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: "Container Memory usage (instance {{ $labels.instance }}) (name: {{ $labels.name }})"
      description: "Container Memory usage is above 80% {{ $labels.name }}\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

- name: process-exporter
  rules:
    - alert: CPUUsageByProcess
      expr: sum(rate(namedprocess_namegroup_cpu_seconds_total{groupname=~".+"}[5m])) by (groupname, instance, name) * 100 > 80
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "CPU usage per-process (instance {{ $labels.instance }}) (name {{ $labels.name }}) (process {{ $labels.groupname }})"
        description: "CPU usage per-process $labels.groupname up < 80% \n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"

- name: blackbox-exporter
  rules:
    - alert: ProbeFailed
      expr: probe_success == 0
      for: 5m
      labels:
        severity: crtical
      annotations:
        summary: "Probe failed (instance {{ $labels.instance }})"
        description: "Probe failed\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SlowProbe
      expr: avg_over_time(probe_duration_seconds[1m]) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Slow probe (instance {{ $labels.instance }})"
        description: "Blackbox probe took more than 1s to complete\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: HttpStatusCode
      expr: probe_http_status_code >= 400
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "HTTP Status Code (instance {{ $labels.instance }})"
        description: "HTTP status code is not 200-399\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SslCertificateWillExpireSoon30
      expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "SSL certificate will expire soon (instance {{ $labels.instance }})"
        description: "SSL certificate expires in 30 days\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SslCertificateWillExpireSoon3
      expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 3
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "SSL certificate will expire soon (instance {{ $labels.instance }})"
        description: "SSL certificate expires in 3 days\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SslCertificateHasExpired
      expr: probe_ssl_earliest_cert_expiry - time()  <= 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "SSL certificate has expired (instance {{ $labels.instance }})"
        description: "SSL certificate has expired already\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: HttpSlowRequests
      expr: avg_over_time(probe_http_duration_seconds[1m]) > 1
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "HTTP slow requests (instance {{ $labels.instance }})"
        description: "HTTP request took more than 1s\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: ProbeSlowHttp
      expr: avg_over_time(probe_http_duration_seconds[5m]) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Probe slow HTTP (instance {{ $labels.instance }})"
        description: "HTTP request took more than 1s\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
- name: node-exporter
  rules:
  - alert: NodeOutOfMemory
    expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: "Host out of memory (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
      description: "Node memory is filling up (< 10% left)\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - alert: NodeMemoryUnderMemoryPressure
    expr: rate(node_vmstat_pgmajfault[1m]) > 1000
    for: 2m
    labels:
      severity: warning
    annotations:
      summary: "Host memory under memory pressure (name: {{ $labels.name }}) (instance: {{ $labels.instance }})."
      description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
  - alert: NodeHighCpuLoad
    expr: 100 - (avg by(instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
    for: 0m
    labels:
      severity: warning
    annotations:
      summary: "Host high CPU load (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
      description: "CPU load is > 80%\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: "NodeFilesystemSpaceFillingUp"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem is predicted to run out of space within the next 24 hours (name: {{ $labels.name }}) (instance: {{ $labels.instance }})."
    expr: |
      (
        node_filesystem_avail_bytes{fstype!=""} / node_filesystem_size_bytes{fstype!=""} * 100 < 40
      and
        predict_linear(node_filesystem_avail_bytes{fstype!=""}[6h], 24*60*60) < 0
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeFilesystemSpaceFillingUp"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up fast.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem is predicted to run out of space within the next 4 hours (name: {{ $labels.name }}) (instance: {{ $labels.instance }})."
    expr: |
      (
        node_filesystem_avail_bytes{fstype!=""} / node_filesystem_size_bytes{fstype!=""} * 100 < 20
      and
        predict_linear(node_filesystem_avail_bytes{fstype!=""}[6h], 4*60*60) < 0
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "critical"
  - alert: "NodeFilesystemAlmostOutOfSpace"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem has less than 5% space left. (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_avail_bytes{fstype!=""} / node_filesystem_size_bytes{fstype!=""} * 100 < 5
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeFilesystemAlmostOutOfSpace"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem has less than 3% space left. (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_avail_bytes{fstype!=""} / node_filesystem_size_bytes{fstype!=""} * 100 < 3
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "critical"
  - alert: "NodeFilesystemFilesFillingUp"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem is predicted to run out of inodes within the next 24 hours (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_files_free{fstype!=""} / node_filesystem_files{fstype!=""} * 100 < 40
      and
        predict_linear(node_filesystem_files_free{fstype!=""}[6h], 24*60*60) < 0
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeFilesystemFilesFillingUp"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up fast.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem is predicted to run out of inodes within the next 4 hours (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_files_free{fstype!=""} / node_filesystem_files{fstype!=""} * 100 < 20
      and
        predict_linear(node_filesystem_files_free{fstype!=""}[6h], 4*60*60) < 0
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "critical"
  - alert: "NodeFilesystemAlmostOutOfFiles"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem has less than 5% inodes left (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_files_free{fstype!=""} / node_filesystem_files{fstype!=""} * 100 < 5
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeFilesystemAlmostOutOfFiles"
    annotations:
      description: "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Filesystem has less than 3% inodes left (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_filesystem_files_free{fstype!=""} / node_filesystem_files{fstype!=""} * 100 < 3
      and
        node_filesystem_readonly{fstype!=""} == 0
      )
    for: "1h"
    labels:
      "severity": "critical"
  - alert: HostSwapIsFillingUp
    expr: (1 - (node_memory_SwapFree_bytes / node_memory_SwapTotal_bytes)) * 100 > 80
    for: 5m
    labels:
      severity: warning
    annotations:
      description: "Host swap is filling up (name: {{ $labels.name }}) (instance {{ $labels.instance }})"
      message: "Swap is filling up (>80%) (name: {{ $labels.name }})\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

  - alert: "NodeNetworkReceiveErrs"
    annotations:
      description: "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Network interface is reporting many receive errors (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      rate(node_network_receive_errs_total[2m]) / rate(node_network_receive_packets_total[2m]) > 0.01
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeNetworkTransmitErrs"
    annotations:
      description: "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Network interface is reporting many transmit errors (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      rate(node_network_transmit_errs_total[2m]) / rate(node_network_transmit_packets_total[2m]) > 0.01
    for: "1h"
    labels:
      "severity": "warning"
  - alert: "NodeHighNumberConntrackEntriesUsed"
    annotations:
      description: "{{ $value | humanizePercentage }} of conntrack entries are used.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Number of conntrack are getting close to the limit (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75
    labels:
      "severity": "warning"
  - alert: "NodeTextFileCollectorScrapeError"
    annotations:
      description: "Node Exporter text file collector failed to scrape.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Node Exporter text file collector failed to scrape (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      node_textfile_scrape_error == 1
    labels:
      "severity": "warning"
  - alert: "NodeClockSkewDetected"
    annotations:
      description: "Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Clock skew detected (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      (
        node_timex_offset_seconds > 0.05
      and
        deriv(node_timex_offset_seconds[5m]) >= 0
      )
      or
      (
        node_timex_offset_seconds < -0.05
      and
        deriv(node_timex_offset_seconds[5m]) <= 0
      )
    for: "10m"
    labels:
      "severity": "warning"
  - alert: "NodeClockNotSynchronising"
    annotations:
      description: "Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"
      summary: "Clock not synchronising (name: {{ $labels.name }}) (instance: {{ $labels.instance }})"
    expr: |
      min_over_time(node_timex_sync_status[5m]) == 0
      and
      node_timex_maxerror_seconds >= 16
    for: "10m"
    labels:
      "severity": "warning"



